{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","reverseField","setReverseField","SORT_BY_DEFAULT","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","SORT_BY_ALPHABET","localeCompare","SORT_BY_LENGTH","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,mBAAAA,E,4BAAAA,E,yBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EACIF,mBAAmBH,EAASM,iBADhC,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EA9BR,SACEC,EADF,GAGG,IADCH,EACF,EADEA,UAAWH,EACb,EADaA,aAEPO,EAAa,YAAOD,GAmB1B,OAjBIH,GACFI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKP,EAASe,iBACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,eACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXd,GACFO,EAAcQ,UAGTR,EAOcS,CAAiBnB,EACpC,CAAEM,YAAWH,iBAEf,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaR,EAASe,mBACrCQ,KAAK,SACLF,UAAWG,IAAG,SAAU,UACtB,CACE,WAAYjB,IAAcP,EAASe,mBALzC,iCAWA,wBACEO,QAAS,kBAAMd,EAAaR,EAASiB,iBACrCM,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CACE,WAAYjB,IAAcP,EAASiB,iBALzC,4BAWA,wBACEK,QAAS,kBAAMjB,GAAiBD,IAChCmB,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CACE,YAAapB,IALnB,sBAWEG,IAAcP,EAASM,iBAAmBF,IAC1C,wBACEkB,QAAS,WACPd,EAAaR,EAASM,iBACtBD,GAAgB,IAElBkB,KAAK,SACLF,UAAU,4BANZ,sBAcJ,6BACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18fc65cf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  SORT_BY_DEFAULT = '',\n  SORT_BY_ALPHABET = 'alphabet',\n  SORT_BY_LENGTH = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, reverseField }: { sortField: SortType, reverseField: boolean },\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reverseField, setReverseField] = useState(false);\n  const [sortField, setSortField]\n    = useState<SortType>(SortType.SORT_BY_DEFAULT);\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reverseField });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={cn('button', 'is-info',\n            {\n              'is-light': sortField !== SortType.SORT_BY_ALPHABET,\n            })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success',\n            {\n              'is-light': sortField !== SortType.SORT_BY_LENGTH,\n            })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverseField(!reverseField)}\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            {\n              'is-light': !reverseField,\n            })}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== SortType.SORT_BY_DEFAULT || reverseField) && (\n          <button\n            onClick={() => {\n              setSortField(SortType.SORT_BY_DEFAULT);\n              setReverseField(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}